// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'underscore', 'backbone', 'backboneiobind', 'socketio', 'models/controlModel', 'collections/controls'], function($, _, Backbone, backboneiobind, io, ControlModel, ControlsCollection) {
    var ControllerModel;

    ControllerModel = Backbone.Model.extend({
      socketServer: 'http://api.reactr.co:80',
      urlRoot: 'controller',
      pollInterval: 100,
      initialize: function() {
        console.log('new controller model!');
        return this.socketize();
      },
      fetchData: function() {
        var _this = this;

        return this.fetch({
          success: function(model, response, options) {
            _this.collection = new ControlsCollection(response.controls, {
              model: ControlModel
            });
            _this.unset('controls');
            return _this.trigger('controller:load');
          },
          error: function(model, response, options) {
            console.log(this);
            return console.error(response);
          }
        });
      },
      socketize: function() {
        this.socket = io.connect(this.socketServer);
        window.socket = this.socket;
        console.log('Socket connected! Host: ' + this.socketServer);
        console.log(this.socket);
        return this.fetchData();
      },
      populateController: function(model, response, options) {
        return console.log(this.collection);
      },
      checkTime: function() {
        if (Date.now() - this.lastSent > this.pollInterval) {
          this.lastSent = Date.now();
          return this.emit();
        } else {
          return console.log('skipping');
        }
      },
      emit: function() {
        var data;

        data = this.collection.toJSON();
        console.log('sending!');
        return this.socket.emit('data', data);
      }
    });
    return ControllerModel;
  });

}).call(this);
